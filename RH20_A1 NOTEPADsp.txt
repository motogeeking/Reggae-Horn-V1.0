'***************************************************************************
'*                                                                         *
'*                         Reggae Horn v2.0                                *
'*                           by MotoGeek                                   *
'*                                                                         *
'*  A fun "horn" project for your motorcycle, or other vehicle, that can   *
'*  can play ANY sound you want in the form of an MP3 file.                *
'*  See the schematics on how to build and connect to your vehicle.        *
'*                                                                         *
'*  This version plays sounds at two different instances...                *
'*    1) when the key is first switched on (optional start-up sound) and   *
'*    2) when you press the horn button.                                   *
'*                                                                         *
'*  All sound files are stored on a microTF card as MP3 files. If you      *
'*  want only horn sounds (no start-up sounds), create a folder and name   *
'*  it "01" (without quotes). This is where your horns sounds will be      *
'*  stored. If you also want start-up sounds, create a second folder and   *
'*  name it "02" (without quotes). These folders need to be on the root    *
'*  of your microTF card and must contain at least one MP3 sound file.     *
'*  NOTE: start-up sounds are optional. Do not create folder "02" if you   *
'*  don't want start-up sounds.                                            *
'*                                                                         *
'*  All sound files must be named 001.mp3, 002.mp3, etc. or you can name   *
'*  the files 001MacSound.mp3, 002ReggaeHorn.mp3, 0003BikeBell.mp3, etc.   *
'*  but all must start with the 3 digit sequential number scheme.          *
'*  Sound file names can range from 001 - 099 in each folder.              *
'*                                                                         *
'*  Place your MP3 sound files into the appropriate folder according to    *
'*  how you want to use them. Either horn sounds (place in folder 01),     *
'*  or optional start-up sounds (place in folder 02).                      *
'*                                                                         *
'*  Upon power up, the program will fetch the total number of folders      *
'*  and MP3 files in each folder.                                          *
'*                                                                         *
'*  If you chose to use start-up sounds, upon turning on your key, the     *
'*  first MP3 file (001.mp3) in folder 02 will play to completion. If      *
'*  there is more than one MP3 file in folder 02, then the next file will  *
'*  play the next time you turn the key on. Be creative... Let your        *
'*  vehicle tell you how awesome you are, or play the Apple Mac startup    *
'*  sound or any other cool clip, every time you start your vehicle.       *
'*  You can use up to 99 sound files in each folder.                       *
'*                                                                         *
'*  You may want the start-up sounds to play at a lower volume than the    *
'*  horn sounds, for instance if you are in your garage. The start-up      *
'*  volume level can be controlled using the potentiometer connected       *
'*  to pin 3 of the PIC12f1840. You can set it to a comfortable level.     *
'*                                                                         *
'*  Once the key is on, and the optional start-up sound is played,         *
'*  the unit will wait for you to press the horn button.                   *
'*                                                                         *
'*  Since there is only one button, we have to creatively use it to do     *
'*  3 different things... change the horn volume, select one of possibly   *
'*  many horn sounds and of course, as a button to activate the horn.      *
'*                                                                         *
'*  Simply pressing the horn button will play the current horn sound for   *
'*  as long as it is pressed, UP TO 5 SECONDS!  This can be changed with   *
'*  the variable "PressTimeOut". If the horn button is pressed pass this   *
'*  amount of time, the unit will cycle through all stored MP3 sounds in   *
'*  folder 01, for one second each at a volume set by variable "CycleVol". *
'*  This allows you to cycle through the sounds at a more comfortable      *
'*  volume level. Simply release the horn button when you hear the sound   *
'*  you want to use as your horn. This sound will be set as your horn      *
'*  sound and the volume will be set back to the horn volume.              *
'*                                                                         *
'*  Pressing and holding the horn button while turning the power (key) on  *
'*  will allow you to change the horn volume. The unit will start at the   *
'*  lowest volume level and play the current horn sound for one second     *
'*  and stop, then increase the volume and play the horn sound again.      *
'*  This cycle will continue through 10 volume levels, from low to high    *
'*  as long as you keep holding the button. When you reach the volume you  *
'*  like, just release the button and that volume will be set and saved.   *
'*                                                                         *
'*  THIS PROJECT IS A NOVELTY AND IS NOT INTENDED AS A SUBSTITUTE FOR      *
'*  A DOT APPROVED MOTOR VEHICLE HORN! USE RESPONSIBLY!                    *
'*                                                                         *
'***************************************************************************

#chip 12F1840, 32                           ' Define chip and speed (32Mhz internal osc.)

#define TX portA.0                          ' Pin 7  A.0, TX serial port (USART)
#define RX portA.1                          ' Pin 6  A.1, RX serial port (USART)
#define HornSw portA.2                      ' Pin 5  A.2, Horn switch input from opto -> low = on
#define MP3Busy portA.3                     ' Pin 4  A.3, Busy line from MP3 -> low = busy
#define StartVolPot portA.4                 ' pin 3  Analog In AN3 - Start sound volume pot

#define USART_BAUD_RATE 9600                ' Initializes USART port with 9600 baud
#define USART_BLOCKING                      ' wait for USART to finish receiving or transmitting

#define StartVol (readAD(AN3)/25) * 3       ' Divide start volume pot into 10 steps

dir TX out                                  ' Set pin 7 to output - TX out to MP3 module RX
dir RX in                                   ' Set pin 6 to input - RX in from MP3 module TX
dir HornSw in                               ' Set pin 5 to input
dir MP3Busy in                              ' Set pin 4 to input
dir StartVolPot in                          ' Set pin 3 to input

On Interrupt UsartRX1Ready call MP3GetData  ' Set up interrupt for receiving data from MP3 module
IntOff                                      ' Turn interrupt off until needed

dim CheckSum as word                        ' CheckSum is word - MSB, LSB
dim CmdAdd as word                          ' Added up command bytes 2 - 7 for checksum

dim RecData(10)                             ' Set up MP3 player received data array
RecData = 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   ' 10 byte RX array

dim Cmd(10)                                 ' Set up MP3 player send command array
Cmd = 0x7E, 0xFF, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xEF       ' 10 byte TX array

#define CycleVol 15                         ' Volume level during horn sound selection process (1 - 30)
#define PressTimeOut 5                      ' # of seconds to press horn switch before sound change

wait 1 s                                    ' Give MP3 player time to initialize

hserreceive(Rr)                             ' Clear Rx register just in case of random junk

'*****************************************************************************************
'********************    Check how many folders on microTF Card      *********************
'*****************************************************************************************

IntOn                                       ' Turn on interrupt
IndexPtr = 1                                ' Set RecData index pointer to 1
MP3QTotalF                                  ' MP3 command query how many folders on microTF card
wait 150 ms                                 ' Wait a bit to collect 10 bytes from MP3 module
IntOff                                      ' Turn off interrupt
TotalFolders = RecData(7) - 1               ' # of folders on microTF card (7th byte of data - 1)

'*****************************************************************************************
'**************       Check how many tracks in folder 01 (Horn Sounds)     ***************
'**************       Check if in range and save Horn sound in eeprom      ***************
'*****************************************************************************************

IntOn                                       ' Turn interrupt on
IndexPtr = 1                                ' Set RecData index pointer to 1
MP3QTracksF 1                               ' MP3 command query how many tracks in folder 01
wait 150 ms                                 ' Wait a bit to collect 10 bytes from MP3 module
IntOff                                      ' Turn off interrupt
TracksInFolder1 = RecData(7)                ' # of tracks in folder 01 (7th byte of returned data)
EPRead 1, HornSound                         ' Read saved horn sound file number
if HornSound < 1 or HornSound > TracksInFolder1 then
    HornSound = 1                           ' If not in range, set Horn Sound to first track
    EPWrite 1, HornSound                    ' Save to Eeprom
end if

'*****************************************************************************************
'*********   2 folders?, check how many tracks in folder 02 (Start-up Sounds)    *********
'*********         Check if in range and save Start-up sound in eeprom           *********
'*****************************************************************************************

if TotalFolders = 2 then
    IntOn                                   ' Turn interrupt on
    IndexPtr = 1                            ' Set RecData index pointer to 1
    MP3QTracksF 2                           ' MP3 command query how many tracks in folder 02
    wait 150 ms                             ' Wait a bit to collect 10 bytes from MP3 module
    IntOff                                  ' Turn off interrupt
    TracksInFolder2 = RecData(7)            ' # of tracks in folder 02 (7th byte of returned data)
    EPRead 2, StartSound                    ' Read saved start sound file number
    if StartSound < 1 or StartSound > TracksInFolder2 then
        StartSound = 1                      ' If not in range, set Start Sound to first track
        EPWrite 2, StartSound               ' Save to Eeprom
    end if
end if

'*****************************************************************************************
'**************         Select current horn volume from eeprom             ***************
'**************    Check if in range and save Horn volume in eeprom        ***************
'*****************************************************************************************

EPRead 0, HornVol                           ' Read saved horn sound volume level
if HornVol < 1 or HornVol > 30 then         ' is horn volume in range?
    HornVol = 15                            ' no, so set HornVol to medium
    EPWrite 0, HornVol                      ' Save current horn volume to Eprom
end if                                      ' HornVol is in range, so carry on...

'*****************************************************************************************
'**************    If horn button pressed during power-up, then start      ***************
'**************    horn volume selection process and save to eeprom        ***************
'*****************************************************************************************

if HornSw = 0 then                          ' Horn Switch is pressed at power up
    HornVol = 3                             ' Set initial horn volume to low

    NextVolume:                             ' Just a spot (label) to jump to

    MP3Vol HornVol                          ' MP3 command set new horn volume
    wait 150 ms                             ' Wait a bit before sending next command
    MP3PlayFT(1, HornSound)                 ' MP3 command play current horn sound in folder 01
    wait 1 s                                ' for one second
    MP3Stop                                 ' Stop playing that sound
    wait 500 ms                             ' Wait half second
    if HornSw = 1 then                      ' If horn switch released, select current horn volume...
        EPWrite 0, HornVol                  ' Save selected horn volume to Eprom and...
        goto StartUp                        ' Begin normal start-up
    end if                                  ' if not...
    HornVol = HornVol + 3                   ' Increase horn volume by 3
    if HornVol > 30 then HornVol = 3        ' Reached hightest horn volume, start over
    goto NextVolume                         ' Try new horn volume since horn switch is still pressed
end if                                      ' Horn switch is not pressed at start up, so carry on...

'*****************************************************************************************
'**************    If two folders, play and increment start-up sound       ***************
'**************         and save next start-up sound to eeprom             ***************
'*****************************************************************************************

StartUp:                                    ' Just a spot (label) to jump to

if TotalFolders = 2 then                    ' If start-up sound folder exists then
    MP3Vol StartVol                         ' Set start-up sound volume
    wait 150 ms                             ' Wait a bit before sending next command
    MP3PlayFT(2, StartSound)                ' Play Start-up sound
    wait 150 ms                             ' Wait a bit for MP3 module busy pin to go low (playing)
    StartSound = StartSound + 1             ' Set next Start-up sound number
    if StartSound > TracksInFolder2 then StartSound = 1  ' Reached last file, start over
    EPWrite 2, StartSound                   ' Save current Start-up sound to Eprom
    wait until MP3Busy = 1                  ' Wait here until start sound is done playing
end if                                      ' No second folder, carry on...

'*****************************************************************************************
'*******************         Start regular horn operation           **********************
'*****************************************************************************************

MP3Vol HornVol                              ' MP3 command set saved horn sound volume level

Main:                                       ' This is where it all begins (label)

wait until HornSw = 0                       ' Wait here until horn switch is pressed
wait 30 ms                                  ' Debounce time for Horn Switch
if HornSw = 1 then goto Main                ' Horn switch still pressed? Nope, just a glitch, start over

MP3PlayFT(1, HornSound)                     ' MP3 command play current horn sound in folder 01

'*****************************************************************************************
'*******    Check to see if horn button pressed for longer than PressTimeOut      ********
'*******          If so, change horn sound track and save to eeprom               ********
'*******              If not, just play the current horn sound                    ********
'*****************************************************************************************

HornCount = 0                               ' Initialize pressed button counter

do while HornSw = 0                         ' Do the following stuff while horn switch is pressed
    wait 100 ms	                            ' wait a tenth of a second

    HornCount = HornCount + 1               ' Increment pressed button counter (each loop = + 100ms)

    if HornCount > (PressTimeOut * 10) then ' If PressTimeOut * 10 * 100 ms happened...
        MP3Stop                             ' MP3 command to stop if currently playing
        wait 150 ms                         ' Wait a bit before sending next command
        MP3Vol CycleVol                     ' MP3 command set cycle sound volume
        wait 500 ms                         ' wait half a second

        NextSound:                          ' Just a spot (label) to jump to

        HornSound = HornSound + 1           ' Increment to next sound file
        if HornSound > TracksInFolder1 then HornSound = 1  ' Reached last file, start over
        MP3PlayFT(1, HornSound)             ' MP3 command play next horn sound...
        wait 1 s                            ' for one second
        MP3Stop                             ' Stop playing that sound
        wait 500 ms                         ' Wait half second before playing next sound

        if HornSw = 1 then                  ' If horn switch released, select current sound
            EPWrite 1, HornSound            ' Save selected sound file to eeprom and...
            MP3Vol HornVol                  ' Reload normal horn volume and...
            wait 150 ms
            goto Main                       ' go back and wait for horn switch
        end if                              ' if not then...
        goto NextSound                      ' Horn switch still pressed, start selection process over
    end if                                  ' if HornCount is not reached yet, then...
loop                                        ' Keep playing current sound while horn switch is pressed

MP3Stop                                     ' Horn switch released, stop playing sound
wait 150 ms

goto Main                                   ' Go back and wait for horn switch


'*****************************************************************************************
'**********       SUB - MP3 query number of folders on microTF card           ************
'*****************************************************************************************

Sub MP3QTotalF
    Cmd(4) = 0x4F                           ' query folder command
    Cmd(6) = 0x00
    Cmd(7) = 0x00
    MP3SendCmd                              ' Send the 10 byte command (last subroutine below)
End Sub

'*****************************************************************************************
'************       SUB - MP3 query number of tracks in a folder           ***************
'*****************************************************************************************

Sub MP3QTracksF(Folder)
    Cmd(4) = 0x4E                           ' query tracks in folder command
    Cmd(6) = 0x00
    Cmd(7) = Folder                         ' which folder
    MP3SendCmd                              ' Send the 10 byte command (last subroutine below)
End Sub

'*****************************************************************************************
'**********                 SUB - MP3 play track in folder                    ************
'*****************************************************************************************

Sub MP3PlayFT(Folder, Track)                ' play track in folder command
    Cmd(4) = 0x0F
    Cmd(6) = Folder                         ' which folder
    Cmd(7) = Track                          ' which track
    MP3SendCmd                              ' Send the 10 byte command (last subroutine below)
End Sub

'*****************************************************************************************
'**********               SUB - MP3 stop playing current track                ************
'*****************************************************************************************

Sub MP3Stop
    Cmd(4) = 0x16                           ' Stop command
    Cmd(6) = 0x00
    Cmd(7) = 0x00
    MP3SendCmd                              ' Send the 10 byte command (last subroutine below)
end sub

'*****************************************************************************************
'**********                    SUB - MP3 set volume command                   ************
'*****************************************************************************************

sub MP3Vol(VolSend)                         ' Volume = 1 - 30
    Cmd(4) = 0x06                           ' Set volume command
    Cmd(6) = 0x00
    Cmd(7) = VolSend                        ' Volume parameter 1 - 30
    MP3SendCmd                              ' Send the 10 byte command (last subroutine below)
end sub

'*****************************************************************************************
'**********              SUB - MP3 service received byte interrupt            ************
'*****************************************************************************************

' sub called by interrupt every time there is a byte ready in the USART RX register if
' IntOn is set  -  in this case... 10 times (the 10 bytes in RecData array)

sub MP3GetData
    hserreceive(RecData(IndexPtr))          ' get a byte and put into array at index pointer position
    IndexPtr = IndexPtr + 1                 ' increment index pointer
end sub

'*****************************************************************************************
'**********              SUB - send 10 byte command to MP3 module             ************
'*****************************************************************************************

sub MP3SendCmd
' >>>> first figure out checksum for current command...
CmdAdd = 0                                  ' Set total of added up command bytes to 0
for Xx = 2 TO 7                             ' Add up command bytes 2 - 7
    CmdAdd = CmdAdd + Cmd(Xx)               ' CmdAdd = word
next Xx
CheckSum = 0 - CmdAdd                       ' Get MSB, LSB (word) and subtract from 0 = checksum
Cmd(8) = CheckSum_H                         ' Get MSB and put in 8th command byte
Cmd(9) = CheckSum                           ' Get LSB and put in 9th command byte

' >>>> then send all 10 bytes of command array to MP3 module
for Xx = 1 to 10
    HSerSend Cmd(Xx)
next Xx
end sub
